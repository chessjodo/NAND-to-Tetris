// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[0..2],
               a = outA, b = outB, c = outC, d = outD,
               e = outE, f = outF, g = outG, h = outH);
    RAM64(in = in, load = outA, address = address[3..8], out = cA);
    RAM64(in = in, load = outB, address = address[3..8], out = cB);
    RAM64(in = in, load = outC, address = address[3..8], out = cC);
    RAM64(in = in, load = outD, address = address[3..8], out = cD);
    RAM64(in = in, load = outE, address = address[3..8], out = cE);
    RAM64(in = in, load = outF, address = address[3..8], out = cF);
    RAM64(in = in, load = outG, address = address[3..8], out = cG);
    RAM64(in = in, load = outH, address = address[3..8], out = cH);

    Mux8Way16(a = cA, b = cB, c = cC, d = cD, e = cE, f = cF, g = cG, h = cH,
            sel = address[0..2], out = out);
}
