// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
DMux4Way(in = load, sel = address[0..1],
               a = outA, b = outB, c = outC, d = outD);
    RAM4K(in = in, load = outA, address = address[2..13], out = cA);
    RAM4K(in = in, load = outB, address = address[2..13], out = cB);
    RAM4K(in = in, load = outC, address = address[2..13], out = cC);
    RAM4K(in = in, load = outD, address = address[2..13], out = cD);

    Mux4Way16(a = cA, b = cB, c = cC, d = cD,
            sel = address[0..1], out = out);
}
